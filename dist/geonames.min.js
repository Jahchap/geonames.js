!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("axios")):"function"==typeof define&&define.amd?define(["axios"],t):"object"==typeof exports?exports.Geonames=t(require("axios")):e.Geonames=t(e.axios)}(this,function(e){return function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/",o(o.s=0)}([function(e,t,o){e.exports=o(1)},function(e,t,o){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Geonames=void 0;const r=n(o(2)),s=n(o(3)),i=o(4);function a(e){return(e=>{if(!e||!e.username)throw new Error("you must provide a username, if you don't have one register on http://www.geonames.org/login");const t=Object.assign(Object.assign({},i.baseParams),e),{username:o,token:n}=t,a={options:e,config:t,version:r.default.version,uri:n?i.baseUriCommercial:i.baseUri},c=s.default.create({baseURL:a.uri});for(let e of i.geoNamesAPI){const t=`${e}${a.config.encoding}`;a[e]=(async e=>(await c.get(t,{params:Object.assign(Object.assign(Object.assign({username:o},n&&{token:n}),{lang:a.config.lan}),e)})).data)}return a})(e)}t.Geonames=a,t.default=a},function(e){e.exports={name:"geonames.js",version:"3.0.0",homepage:"https://github.com/kinotto/geonames.js",description:"REST api to fetch countries, regions, cities etc. A flexible library for browser and node.js usage built on top http://www.geonames.org/",main:"dist/geonames.min.js",scripts:{test:"mocha --require ts-node/register ./spec/test-server.ts --timeout 50000","test-debug":"mocha ./spec/test-server.js --nolazy --inspect-brk=9229",coverage:"nyc npm test && nyc report --reporter=text-lcov | coveralls",build:"cross-env NODE_ENV=production webpack","build:dev":"cross-env NODE_ENV=development webpack","build:all":"rm -rf dist/* && npm run build && npm run build:dev"},repository:"git+https://github.com/kinotto/geonames.js.git",author:"Karim Abdelcadir <kinotto88@yahoo.it>",contributors:[{name:"Vito Macchia",email:"vito.macchia@gmail.com"},{name:"Xavi Torell√≥",email:"info@xaviertorello.cat"}],license:"MIT",bugs:{url:"https://github.com/kinotto/geonames.js/issues"},dependencies:{axios:"^0.21.0"},devDependencies:{"@types/chai":"^4.2.14","@types/jest":"^26.0.15","@types/mocha":"^8.0.3","@types/node":"^14.14.6","@types/sinon-chai":"^3.2.5","babel-core":"^6.26.3","babel-loader":"^7.1.5","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.7.0",chai:"^4.2.0",coveralls:"^2.12.0","cross-env":"^5.2.0",mocha:"^3.2.0",nyc:"^10.1.2",opener:"^1.4.1","require-dir":"^0.3.1",sinon:"^9.2.1","sinon-chai":"^3.5.0","tiny-lr":"^0.2.1","ts-loader":"^4.4.2","ts-node":"^9.0.0",typescript:"^4.0.5","uglifyjs-webpack-plugin":"^1.2.7",webpack:"^4.16.2","webpack-cli":"^3.1.0","webpack-node-externals":"^1.7.2"}}},function(t,o){t.exports=e},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.geoNamesAPI=t.baseUriCommercial=t.baseUri=t.baseParams=void 0,t.baseParams={encoding:"JSON",formatted:!0,lan:"en",style:"full",username:null,token:null},t.baseUri="https://secure.geonames.org/",t.baseUriCommercial="https://secure.geonames.net/",t.geoNamesAPI=["astergdem","children","cities","contains","countryCode","countryInfo","countrySubdivision","earthquakes","extendedFindNearby","findNearby","findNearbyPlaceName","findNearbyPostalCodes","findNearbyStreets","findNearbyStreetsOSM","findNearByWeather","findNearbyWikipedia","findNearestAddress","findNearestIntersection","findNearestIntersectionOSM","findNearbyPOIsOSM","geocode","get","gtopo30","hierarchy","neighbourhood","neighbours","ocean","postalCodeCountryInfo","postalCodeLookup","postalCodeSearch","rssToGeo","search","siblings","srtm1","srtm3","timezone","weather","weatherIcao","wikipediaBoundingBox","wikipediaSearch","address","geoCodeAddress","streetNameLookup"]}]).Geonames});