!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.Geonames=n():e.Geonames=n()}(this,function(){return function(e){var n={};function o(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=n,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:t})},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="",o(o.s=0)}([function(e,n,o){"use strict";var t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var o=arguments[n];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e},r=o(1),i={baseUri:"https://secure.geonames.org/",baseParams:{formatted:!0,style:"full",lan:"en",encoding:"JSON",username:"demo"},geoNamesAPI:["astergdem","children","cities","contains","countryCode","countryInfo","countrySubdivision","earthquakes","extendedFindNearby","findNearby","findNearbyPlaceName","findNearbyPostalCodes","findNearbyStreets","findNearbyStreetsOSM","findNearByWeather","findNearbyWikipedia","findNearestAddress","findNearestIntersection","findNearestIntersectionOSM","findNearbyPOIsOSM","geocode","get","gtopo30","hierarchy","neighbourhood","neighbours","ocean","postalCodeCountryInfo","postalCodeLookup","postalCodeSearch","rssToGeo","search","siblings","srtm1","srtm3","timezone","weather","weatherIcao","wikipediaBoundingBox","wikipediaSearch"]};var a=function(e){return r(e).then(function(e){return e.data})};e.exports=function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};n.username||console.log("you must provide a username, if you don't have one register on http://www.geonames.org/login"),this.config=t({},i.baseParams,n);for(var o=function(n){e[i.geoNamesAPI[n]]=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o={url:""+i.baseUri+i.geoNamesAPI[n]+this.config.encoding,method:"GET",params:t({},this.config,e)};return a(o)}},r=0;r<i.geoNamesAPI.length;r++)o(r)}},function(e,n){e.exports=require("axios")}])});